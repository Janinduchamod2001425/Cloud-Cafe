package com.cafe.order.producer;

import java.util.HashMap;
import java.util.Map;

public class OrderProcessingServiceImpl implements OrderProcessingService{

	private Map<Integer, String> menu;
	private Map<Integer, Double> prices;
	private Map<Integer, Integer> order;
	
	public OrderProcessingServiceImpl() {
		
		// Initialize the menu items
		menu = new HashMap<>();
		menu.put(1, "Coffee");
		menu.put(2, "Tea");
		menu.put(3, "Sandwitch");
		menu.put(4, "Cake");
		menu.put(5, "Juice");
		menu.put(6, "Cappuccino");
		menu.put(7, "Muffin");
		menu.put(8, "Pancakes");
		menu.put(9, "Croissant");
        menu.put(10, "Hot Chocolate");
        
        // Initialize the prices
        prices = new HashMap<>();
        prices.put(1, 200.0);
        prices.put(2, 100.0);
        prices.put(3, 150.0);
        prices.put(4, 250.0);
        prices.put(5, 120.0);
        prices.put(6, 220.0);
        prices.put(7, 80.0);
        prices.put(8, 180.0);
        prices.put(9, 90.0);
        prices.put(10, 150.0);
        
        // Initialize the order
        order = new HashMap<>();
	}
	
	@Override
	public void displayMenu() {
		System.out.println("______ â˜• Smart Cafe ______");
		System.out.println("O R D E R   P R O C E S S I N G");
		System.out.println("______ Fast and Efficient Service ______");
	    System.out.println("______");
	    System.out.println("--- Smart Cafe Menu ---");
	    
	    // Print table header
	    System.out.println("+----+----------------+-----------+");
	    System.out.println("| No | Item            | Price (Rs)|");
	    System.out.println("+----+----------------+-----------+");

	    // Print menu items in table format
	    for (Map.Entry<Integer, String> entry : menu.entrySet()) {
	        int itemNo = entry.getKey();
	        String itemName = entry.getValue();
	        double price = prices.get(itemNo);

	        // Format the output to align columns
	        System.out.printf("| %-2d | %-16s | %10.2f |\n", itemNo, itemName, price);
	    }

	    // Print table footer
	    System.out.println("+----+----------------+-----------+");
	}

	@Override
	public void placeOrder(int itemNo, int quantity) {
		if (menu.containsKey(itemNo)) {
			order.put(itemNo, order.getOrDefault(itemNo, 0) + quantity);
			System.out.println(menu.get(itemNo) + " x " + quantity + " added to order");
		} else {
			System.out.println("There's no Item with that Item No. !");
		}
	}

	@Override
	public double calculateTotal() {
		double totalBill = 0.0;
		for (Map.Entry<Integer, Integer> entry : order.entrySet()) {
			totalBill += prices.get(entry.getKey()) * entry.getValue();
		}
		return totalBill;
	}
	
}
