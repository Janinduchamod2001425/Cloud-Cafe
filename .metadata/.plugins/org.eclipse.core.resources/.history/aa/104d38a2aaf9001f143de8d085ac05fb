package com.cafe.order.consumer;

import com.cafe.order.producer.OrderProcessingService;
import org.osgi.framework.BundleActivator;
import org.osgi.framework.BundleContext;
import org.osgi.framework.ServiceReference;

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class OrderProcessingActivator implements BundleActivator {

    private ServiceReference<OrderProcessingService> orderServiceRef;

    public void start(BundleContext context) throws Exception {
        System.out.println("Waiter Started");

        // Get the OrderProcessingService from the OSGI service registry
        orderServiceRef = context.getServiceReference(OrderProcessingService.class);
        OrderProcessingService orderService = context.getService(orderServiceRef);

        // Display the menu to the user
        orderService.displayMenu();

        // Use a single Scanner instance (Do not close it)
        Scanner scanner = new Scanner(System.in);

        // Loop to ask for additional items
        boolean addMoreItems = true;
        
        Map<Integer, Integer> order = new HashMap<>();
        
        while (addMoreItems) {
            try {
                // Ask for item number
                System.out.print("Enter Item (Item No): ");
                if (!scanner.hasNextInt()) {
                    System.out.println("Invalid input. Please enter a valid item number.");
                    scanner.next(); // Consume invalid input
                    continue;
                }
                int itemNo = scanner.nextInt();

                // Ask for quantity
                System.out.print("Enter Quantity: ");
                if (!scanner.hasNextInt()) {
                    System.out.println("Invalid input. Please enter a valid quantity.");
                    scanner.next(); // Consume invalid input
                    continue;
                }
                int quantity = scanner.nextInt();

             // Place the order
                order.put(itemNo, order.getOrDefault(itemNo, 0) + quantity);
                System.out.println("âœ… " + orderService.getItemName(itemNo) + " x " + quantity + " added to order.");

                // Ask if the user wants to add more items
                System.out.print("Want to Add More Items? (Y or N): ");
                String response = scanner.next().trim().toLowerCase();

                // Check if the user wants to stop
                if (response.equals("n") || response.equals("no")) {
                    addMoreItems = false;
                }
            } catch (Exception e) {
                System.out.println("Error processing input: " + e.getMessage());
                scanner.nextLine(); // Clear invalid input
            }
        }

        // Calculate and display the total
        double total = orderService.calculateTotal();
        System.out.println("--- Order Summary --- ");
        System.out.println("Total: Rs." + total);
    }

    public void stop(BundleContext context) throws Exception {
        System.out.println("Waiter Stopped");
        context.ungetService(orderServiceRef);
    }
}
